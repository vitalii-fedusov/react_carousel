{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","visibleImagesWidth","useState","translateValue","setTranslateValue","newTranslateValue","extremeTranslatePoint","className","cn","type","onClick","value","Math","min","style","width","gap","map","image","transform","transition","src","alt","indexOf","max","App","state","handleChange","event","target","name","checked","setState","prevState","this","length","htmlFor","id","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f570346.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\nimport cn from 'classnames';\n\ninterface Props {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const gap = 20;\n  const totalGapValue = gap * (frameSize - 1);\n  const visibleImagesWidth = itemWidth * frameSize + totalGapValue;\n\n  const [translateValue, setTranslateValue] = useState(0);\n\n  const newTranslateValue = step * (itemWidth + gap);\n\n  const allImagesWidth = (10 * itemWidth) + (9 * gap);\n  const extremeTranslatePoint = allImagesWidth - visibleImagesWidth;\n\n  const handlePrev = () => {\n    let value = 0;\n\n    value = Math.min(translateValue + newTranslateValue, 0);\n\n    setTranslateValue(value);\n  };\n\n  const handleRight = () => {\n    let value = 0;\n\n    value = Math.max(\n      translateValue - newTranslateValue, (-extremeTranslatePoint),\n    );\n    if (infinite && -1 * value >= extremeTranslatePoint) {\n      value = 0;\n    }\n\n    setTranslateValue(value);\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div className=\"Carousel__container\">\n        <button\n          className={cn('button-prev', {\n            'button-prev__disabled': translateValue === 0,\n          })}\n          type=\"button\"\n          onClick={handlePrev}\n        >\n          <div className=\"button-prev__text\">&lt;</div>\n        </button>\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            width: `${visibleImagesWidth}px`,\n            gap: `${gap}px`,\n          }}\n        >\n          {images.map(image => (\n            <li\n              className=\"Carousel__item\"\n              key={image}\n              style={{\n                transform: `translateX(${translateValue}px)`,\n                transition: `transform ${animationDuration}ms ease`,\n              }}\n            >\n              <img\n                src={image}\n                alt={`${images.indexOf(image) + 1}`}\n                width={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n        <button\n          className={cn('button-next', {\n            'button-next__disabled': translateValue === -extremeTranslatePoint,\n          })}\n          type=\"button\"\n          data-cy=\"next\"\n          onClick={handleRight}\n        >\n          <div className=\"button-next__text\">&gt;</div>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      name, value, checked, type,\n    } = event.target;\n\n    this.setState(prevState => ({\n      ...prevState,\n      [name]: type === 'checkbox' ? checked : value,\n    }));\n  };\n\n  render() {\n    const {\n      images, step, frameSize, itemWidth, animationDuration, infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n        <div className=\"input-container\">\n          <div className=\"input-container__item\">\n            <label htmlFor=\"itemId\">item - width </label>\n            <input\n              name=\"itemWidth\"\n              id=\"itemId\"\n              type=\"number\"\n              min=\"100\"\n              max=\"220\"\n              onChange={this.handleChange}\n              value={itemWidth}\n            />\n          </div>\n          <div className=\"input-container__item\">\n            <label htmlFor=\"frameId\">frame-size</label>\n            <input\n              name=\"frameSize\"\n              id=\"frameId\"\n              type=\"number\"\n              min=\"1\"\n              max=\"10\"\n              onChange={this.handleChange}\n              value={frameSize}\n            />\n          </div>\n          <div className=\"input-container__item\">\n            <label htmlFor=\"stepId\">step</label>\n            <input\n              name=\"step\"\n              id=\"stepId\"\n              type=\"number\"\n              min=\"1\"\n              max=\"5\"\n              onChange={this.handleChange}\n              value={step}\n            />\n          </div>\n          <div className=\"input-container__item\">\n            <label htmlFor=\"animationDurationId\">animation-duration</label>\n            <input\n              name=\"animationDuration\"\n              id=\"animationDurationId\"\n              type=\"number\"\n              min=\"100\"\n              max=\"5000\"\n              step=\"100\"\n              onChange={this.handleChange}\n              value={animationDuration}\n            />\n          </div>\n          <div className=\"input-container__item\">\n            <label htmlFor=\"infiniteId\">Infinite</label>\n            <input\n              name=\"infinite\"\n              id=\"infiniteId\"\n              type=\"checkbox\"\n              onChange={this.handleChange}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}